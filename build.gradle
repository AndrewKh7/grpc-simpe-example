apply plugin: 'java'
apply plugin: 'com.google.protobuf'
repositories {
    mavenCentral()
}

def grpcVersion = '1.35.0'
dependencies { //Внешние зависимости, необходимые нам в этом проекте.
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile 'com.google.protobuf:protobuf-java:3.9.2'

    implementation 'javax.annotation:javax.annotation-api:1.3.2'
}
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
//Дополнение protobuf для Gradle, которое мы применяем в этом проекте.
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.10'
    }
}
protobuf {
//В настройках дополнения protobuf нужно указать версии компилятора и исполняемого файла для Java.
    protoc {
        artifact = 'com.google.protobuf:protoc:3.9.2'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        } }
}

sourceSets {
//Это нужно для того, чтобы IDE  знала о сгенерированном коде.
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

jar {
//Главный класс, который используется для запуска приложения.
    manifest {
        attributes "Main-Class": "server.ProductInfoServer"
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
apply plugin: 'application'
startScripts.enabled = false